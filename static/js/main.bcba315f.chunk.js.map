{"version":3,"sources":["app/styles.js","app/theme/index.js","app/components/InfoBox/styles.js","app/components/InfoBox/index.js","app/components/Map/styles.js","app/components/Map/index.js","app/components/Table/styles.js","app/components/Table/index.js","app/components/Graph/LineGraph.js","app/index.js","index.js"],"names":["useStyles","createUseStyles","margin","body","fontFamily","webkitFontSmoothing","mozOsxFontSmoothing","code","app","display","justifyContent","padding","backgroundColor","color","flexDirection","appHeader","alignItems","marginBottom","appStats","InfoBox","title","cases","total","styles","Card","className","infoBox","CardContent","Typography","infoBoxTitle","infoBoxCases","infoBoxTotal","map","height","borderRadius","marginTop","boxShadow","Map","data","center","location","zoom","TileLayer","url","attribution","country","Circle","countryInfo","lat","long","fillOpacity","fillColor","radius","Math","sqrt","Popup","keepInView","zoomAnimation","style","backgroundImage","flag","numeral","format","recovered","deaths","showDataOnMap","table","Table","countries","slice","sort","a","b","active","options","legend","elements","point","maintainAspectRatio","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","LineGraph","useState","setData","useEffect","fetch","then","response","json","apiData","lastDataPoint","chartData","Object","entries","date","number","push","x","y","fetchData","length","datasets","borderColor","App","api","getData","useFetch","setLocation","locationData","setLocationData","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","getLocationData","forEach","iso2","theme","appLeft","FormControl","appDropdown","Select","variant","value","onChange","event","target","MenuItem","todayCases","todayRecovered","todayDeaths","appRight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcba315f.chunk.js","sourcesContent":["import { createUseStyles } from 'react-jss'\n\nexport const useStyles = createUseStyles({\n\t// Global Styles\n\t'@global': {\n\t\t'*': {\n\t\t\tmargin: 0, // Remove all invisible random spacing\n\t\t},\n\t\tbody: {\n\t\t\tfontFamily:\n\t\t\t\t\"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n\t\t\twebkitFontSmoothing: 'antialiased',\n\t\t\tmozOsxFontSmoothing: 'grayscale',\n\t\t},\n\t\tcode: {\n\t\t\tfontFamily:\n\t\t\t\t\"source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace\",\n\t\t},\n\t},\n\t// Classes\n\tapp: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'space-evenly',\n\t\tpadding: 20,\n\t\tbackgroundColor: 'whitesmoke',\n\t\tcolor: 'black',\n\t},\n\t'@media (max-width: 990px)': {\n\t\tapp: {\n\t\t\tflexDirection: 'column',\n\t\t},\n\t},\n\tappHeader: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'space-between',\n\t\tmarginBottom: 20,\n\t},\n\tappStats: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'space-between',\n\t},\n})\n","export default {}\n","import { createUseStyles } from 'react-jss'\n\nexport const useStyles = createUseStyles({})\n","import React from 'react'\nimport { Card, CardContent, Typography } from '@material-ui/core'\nimport { useStyles } from './styles'\n\nconst InfoBox = ({ title, cases, total }) => {\n\tconst styles = useStyles()\n\n\treturn (\n\t\t<Card className={styles.infoBox}>\n\t\t\t<CardContent>\n\t\t\t\t<Typography color=\"textSecondary\" className={styles.infoBoxTitle}>\n\t\t\t\t\t{title}\n\t\t\t\t</Typography>\n\t\t\t\t<h2 className={styles.infoBoxCases}>{cases}</h2>\n\t\t\t\t<Typography color=\"textSecondary\" className={styles.infoBoxTotal}>\n\t\t\t\t\t{total} Total\n\t\t\t\t</Typography>\n\t\t\t</CardContent>\n\t\t</Card>\n\t)\n}\n\nexport default InfoBox\n","import { createUseStyles } from 'react-jss'\n\nexport const useStyles = createUseStyles({\n\tmap: {\n\t\theight: 500,\n\t\tbackgroundColor: 'white',\n\t\tpadding: 16,\n\t\tborderRadius: 20,\n\t\tmarginTop: 16,\n\t\tboxShadow: '0 0 8px -4px rgba(0, 0, 0, 0.5)',\n\t\t'& .leaflet-container': {\n\t\t\theight: '100%',\n\t\t\tborderRadius: 12,\n\t\t},\n\t},\n})\n","import React from 'react'\nimport { Map as LeafletMap, TileLayer, Circle, Popup } from 'react-leaflet'\nimport { useStyles } from './styles'\nimport numeral from 'numeral'\n\nconst showDataOnMap = (data) =>\n\tdata.map((country) => (\n\t\t<Circle\n\t\t\tcenter={[country.countryInfo.lat, country.countryInfo.long]}\n\t\t\tfillOpacity={0.4}\n\t\t\tcolor=\"#FF0000\"\n\t\t\tfillColor=\"#F08080\"\n\t\t\tradius={Math.sqrt(country.cases) * 800}>\n\t\t\t<Popup keepInView={true} zoomAnimation={true}>\n\t\t\t\t<div className=\"info-container\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"info-flag\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundImage: `url(${country.countryInfo.flag})`,\n\t\t\t\t\t\t}}></div>\n\t\t\t\t\t<div className=\"info-name\">\n\t\t\t\t\t\t<strong>{country.country}</strong>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"info-confirmed\">\n\t\t\t\t\t\tCases: {numeral(country.cases).format('0,0')}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"info-recovered\">\n\t\t\t\t\t\tRecovered: {numeral(country.recovered).format('0,0')}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"info-deaths\">\n\t\t\t\t\t\tDeaths: {numeral(country.deaths).format('0,0')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Popup>\n\t\t</Circle>\n\t))\n\nconst Map = ({ data, location, center, zoom }) => {\n\tconst styles = useStyles()\n\n\treturn (\n\t\t<div className={styles.map}>\n\t\t\t<LeafletMap center={center} zoom={zoom}>\n\t\t\t\t<TileLayer\n\t\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\t\t\t\t\tattribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\t/>\n\t\t\t\t{showDataOnMap(data)}\n\t\t\t</LeafletMap>\n\t\t</div>\n\t)\n}\n\nexport default Map\n","import { createUseStyles } from 'react-jss'\n\nexport const useStyles = createUseStyles({\n\ttable: {\n\t\t'marginTop': 20,\n\t\t'overflow': 'scroll',\n\t\t'height': 400,\n\t\t'color': 'grey',\n\t\t'& tr': {\n\t\t\t'display': 'flex',\n\t\t\t'justifyContent': 'space-between',\n\t\t\t'&:nth-of-type(odd)': {\n\t\t\t\tbackgroundColor: 'whitesmoke',\n\t\t\t},\n\t\t\t'& td': {\n\t\t\t\tpadding: '0.5rem',\n\t\t\t},\n\t\t},\n\t},\n})\n","import React from 'react'\nimport { useStyles } from './styles'\n\nconst Table = ({ countries }) => {\n\tconst styles = useStyles()\n\n\treturn (\n\t\t<div className={styles.table}>\n\t\t\t{countries\n\t\t\t\t.slice(0)\n\t\t\t\t.sort((a, b) => (a.active > b.active ? -1 : 1))\n\t\t\t\t.map(({ country, active }) => (\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>{country}</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<strong>{active}</strong>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default Table\n","import React, { useState, useEffect } from 'react'\nimport { Line } from 'react-chartjs-2'\n\nconst options = {\n\tlegend: {\n\t\tdisplay: false,\n\t},\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 0,\n\t\t},\n\t},\n\tmaintainAspectRatio: false,\n\tscales: {\n\t\txAxes: [\n\t\t\t{\n\t\t\t\ttype: 'time',\n\t\t\t\ttime: {\n\t\t\t\t\tformat: 'MM/DD/YY',\n\t\t\t\t\ttooltipFormat: 'll',\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tyAxes: [\n\t\t\t{\n\t\t\t\tgridLines: {\n\t\t\t\t\tdisplay: false,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n}\n\nconst LineGraph = () => {\n\tconst [data, setData] = useState({})\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tawait fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((apiData) => {\n\t\t\t\t\tconst chartData = []\n\t\t\t\t\tlet lastDataPoint\n\n\t\t\t\t\tfor (let [date, number] of Object.entries(apiData.cases)) {\n\t\t\t\t\t\tif (lastDataPoint) {\n\t\t\t\t\t\t\tchartData.push({\n\t\t\t\t\t\t\t\tx: date,\n\t\t\t\t\t\t\t\ty: number - lastDataPoint,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastDataPoint = number\n\t\t\t\t\t}\n\n\t\t\t\t\tsetData(chartData)\n\t\t\t\t})\n\t\t}\n\t\tfetchData()\n\t}, [])\n\n\treturn (\n\t\t<div>\n\t\t\t{data?.length > 0 && (\n\t\t\t\t<Line\n\t\t\t\t\tdata={{\n\t\t\t\t\t\tdatasets: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tbackgroundColor: 'lightcoral',\n\t\t\t\t\t\t\t\tborderColor: 'red',\n\t\t\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t}}\n\t\t\t\t\toptions={options}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default LineGraph\n","import React, { useState, useEffect } from 'react'\nimport { useStyles } from './styles'\nimport { ThemeProvider } from 'react-jss'\nimport theme from './theme'\nimport {\n\tMenuItem,\n\tFormControl,\n\tSelect,\n\tCard,\n\tCardContent\n} from '@material-ui/core'\nimport InfoBox from './components/InfoBox'\nimport Map from './components/Map'\nimport Table from './components/Table'\nimport LineGraph from './components/Graph/LineGraph'\nimport 'leaflet/dist/leaflet.css'\n\n// Fetch all data from disease.sh RESTApi\nconst useFetch = api => {\n\tconst [data, setData] = useState([])\n\n\t// Get All Data from the api (cDM)\n\tuseEffect(() => {\n\t\tconst getData = async () => {\n\t\t\tawait fetch(api)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(apiData => setData(apiData))\n\t\t}\n\t\tgetData()\n\t}, [api])\n\n\treturn data\n}\n\nconst App = () => {\n\tconst styles = useStyles()\n\n\tconst data = useFetch('https://disease.sh/v3/covid-19/countries')\n\n\tconst [location, setLocation] = useState('worldwide')\n\tconst [locationData, setLocationData] = useState({})\n\tconst [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 })\n\tconst [mapZoom, setMapZoom] = useState(3)\n\n\t// Get Country specific data (cDM, cDU)\n\tuseEffect(() => {\n\t\tif (location === 'worldwide') {\n\t\t\tconst getLocationData = async () => {\n\t\t\t\tawait fetch('https://disease.sh/v3/covid-19/all')\n\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t.then(apiData => {\n\t\t\t\t\t\tsetLocationData(apiData)\n\t\t\t\t\t\tsetMapCenter({\n\t\t\t\t\t\t\tlat: 34.80746,\n\t\t\t\t\t\t\tlng: -40.4796\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsetMapZoom(3)\n\t\t\t\t\t})\n\t\t\t}\n\t\t\tgetLocationData()\n\t\t} else {\n\t\t\tdata.forEach(country => {\n\t\t\t\tif (country.countryInfo.iso2 === location) {\n\t\t\t\t\tsetLocationData(country)\n\t\t\t\t\tsetMapCenter({\n\t\t\t\t\t\tlat: country.countryInfo.lat,\n\t\t\t\t\t\tlng: country.countryInfo.long\n\t\t\t\t\t})\n\t\t\t\t\tsetMapZoom(4)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}, [data, location])\n\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<div className={styles.app}>\n\t\t\t\t<div className={styles.appLeft}>\n\t\t\t\t\t<div className={styles.appHeader}>\n\t\t\t\t\t\t<h1>COVID-19 Tracker</h1>\n\t\t\t\t\t\t<FormControl className={styles.appDropdown}>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tvalue={location}\n\t\t\t\t\t\t\t\tonChange={event => setLocation(event.target.value)}>\n\t\t\t\t\t\t\t\t<MenuItem value=\"worldwide\">Worldwide</MenuItem>\n\t\t\t\t\t\t\t\t{data.map(country => (\n\t\t\t\t\t\t\t\t\t<MenuItem value={country.countryInfo.iso2}>\n\t\t\t\t\t\t\t\t\t\t{country.country}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={styles.appStats}>\n\t\t\t\t\t\t<InfoBox\n\t\t\t\t\t\t\ttitle=\"Cases\"\n\t\t\t\t\t\t\tcases={locationData.todayCases}\n\t\t\t\t\t\t\ttotal={locationData.cases}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<InfoBox\n\t\t\t\t\t\t\ttitle=\"Recovered\"\n\t\t\t\t\t\t\tcases={locationData.todayRecovered}\n\t\t\t\t\t\t\ttotal={locationData.recovered}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<InfoBox\n\t\t\t\t\t\t\ttitle=\"Deaths\"\n\t\t\t\t\t\t\tcases={locationData.todayDeaths}\n\t\t\t\t\t\t\ttotal={locationData.deaths}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Map data={data} center={mapCenter} zoom={mapZoom} />\n\t\t\t\t</div>\n\t\t\t\t<Card className={styles.appRight}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<h3>Live Cases by country</h3>\n\t\t\t\t\t\t<Table countries={data} />\n\t\t\t\t\t\t<h3>Worldwide new cases</h3>\n\t\t\t\t\t\t<LineGraph />\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t</ThemeProvider>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}